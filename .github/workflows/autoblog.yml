name: AutoBlog Post Generation

on:
  schedule:
    # Run daily at 8:00 AM UTC
    - cron: '0 8 * * *'
  # Allow manual triggering
  workflow_dispatch:

jobs:
  generate-posts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Full git history needed to generate proper timestamps
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f ../requirements.txt ]; then
            pip install -r ../requirements.txt
          else
            # Install from parent directory requirements if exists
            cd ..
            if [ -f requirements.txt ]; then
              pip install -r requirements.txt
            fi
            cd github_repo
          fi
          
      - name: Create log directory
        run: mkdir -p ../logs

      - name: Run autoblog script
        run: |
          cd ..
          python run_autoblog.py
        env:
          # Map GitHub Secrets to the environment variables used by the script
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          GOOGLE_CSE_ID: ${{ secrets.GOOGLE_CSE_ID }}
          USE_OPENAI: ${{ secrets.USE_OPENAI }}
          USE_ANTHROPIC: ${{ secrets.USE_ANTHROPIC }}
          MODEL_TEMPERATURE: ${{ secrets.MODEL_TEMPERATURE }}
          MAX_TOKENS: ${{ secrets.MAX_TOKENS }}
          NUM_POSTS: ${{ secrets.NUM_POSTS }}
          BLOG_REPO_PATH: ${{ github.workspace }}
          POSTS_PATH: "_posts"
          # Add any other environment variables needed by your script

      - name: Check for changes
        id: check_changes
        run: |
          git status
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Configure Git
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Commit and push changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git add .
          git commit -m "Auto-generated blog posts $(date +'%Y-%m-%d')"
          git push 